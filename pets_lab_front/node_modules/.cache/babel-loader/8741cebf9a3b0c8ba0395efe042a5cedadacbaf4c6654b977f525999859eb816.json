{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PetList from \"../components/PetList\";\nimport PetForm from \"../components/PetForm\";\nconst PetContainer = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  const fetchPets = async () => {\n    const response = await fetch(\"http://localhost:8080/pets\");\n    const data = await response.json();\n    setPets(data);\n  };\n  useEffect(() => {\n    fetchPets();\n  }, []);\n  const postPet = async newPet => {\n    const response = await fetch(\"http://localhost:8080/pets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPet)\n    });\n    const savedPet = await response.json();\n    setPets([...pets, savedPet]);\n  };\n};\n_s(PetContainer, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n_c = PetContainer;\nexport default PetContainer;\nvar _c;\n$RefreshReg$(_c, \"PetContainer\");","map":{"version":3,"names":["useState","useEffect","PetList","PetForm","PetContainer","_s","pets","setPets","fetchPets","response","fetch","data","json","postPet","newPet","method","headers","body","JSON","stringify","savedPet","_c","$RefreshReg$"],"sources":["/Users/zaiyad/Documents/bnta_work/week_10/day_03/pets_lab_front/src/containers/PetContainer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PetList from \"../components/PetList\";\nimport PetForm from \"../components/PetForm\";\n\n\nconst PetContainer = () => {\n    const [pets, setPets] = useState([]);\n\n    const fetchPets = async () => {\n        const response = await fetch(\"http://localhost:8080/pets\")\n        const data = await response.json();\n        setPets(data);\n    }\n\n    useEffect(() => {\n        fetchPets();\n    }, [])\n\n    const postPet = async (newPet) => {\n        const response = await fetch(\"http://localhost:8080/pets\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newPet)\n        })\n        const savedPet = await response.json();\n        setPets([...pets, savedPet]);\n    }\n\n\n\n}\n\nexport default PetContainer;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAG3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;IAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,OAAO,CAACI,IAAI,CAAC;EACjB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZO,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,OAAO,GAAG,MAAOC,MAAM,IAAK;IAC9B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACvDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC/B,CAAC,CAAC;IACF,MAAMM,QAAQ,GAAG,MAAMX,QAAQ,CAACG,IAAI,CAAC,CAAC;IACtCL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEc,QAAQ,CAAC,CAAC;EAChC,CAAC;AAIL,CAAC;AAAAf,EAAA,CAzBKD,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}